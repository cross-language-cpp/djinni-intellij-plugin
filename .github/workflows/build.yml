# GitHub Actions Workflow created for testing and preparing the plugin release in following steps:
# - validate Gradle Wrapper,
# - run test and verifyPlugin tasks,
# - run buildPlugin task and prepare artifact for the further tests,
# - run IntelliJ Plugin Verifier,
#
# Workflow is triggered on push and pull_request events.
#
# Docs:
# - GitHub Actions: https://help.github.com/en/actions
# - IntelliJ Plugin Verifier GitHub Action: https://github.com/ChrisCarini/intellij-platform-plugin-verifier-action

name: Build
on: [push, pull_request]
jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  gradleValidation:
    name: Gradle Wrapper Validation
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v2

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

  # Run verifyPlugin and test Gradle tasks
  test:
    name: Test
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:

      - name: Setup Java 1.8 environment for the next steps
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Fetch Sources
        uses: actions/checkout@v2

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Run Checks
        run: ./gradlew check

      - name: Verify Plugin
        run: ./gradlew verifyPlugin

  # Build plugin with buildPlugin Gradle task and provide the artifact for the next workflow jobs
  # Requires test job to be passed
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java 1.8 environment for the next steps
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Fetch Sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build Plugin
        run: ./gradlew buildPlugin

      - name: Determine Artifact Name
        run: echo "ARTIFACT_NAME=djinni-intellij-plugin-$(./gradlew printVersion --console=plain -q).zip" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: plugin-artifact
          path: ./build/distributions/${{ env.ARTIFACT_NAME }}

  # Verify built plugin using IntelliJ Plugin Verifier tool
  # Requires build job to be passed
  verify:
    name: Verify
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: plugin-artifact

      - name: Verify Plugin
        id: verify
        uses: ChrisCarini/intellij-platform-plugin-verifier-action@v0.0.2
        with:
          plugin-location: plugin-artifact/*.zip
          ide-versions: ideaIC:2020.3

      - name: Print Verify Logs
        if: ${{ always() }}
        env:
          OUTPUT_LOG: ${{ steps.verify.outputs.verification-output-log-filename }}
        run: |
          echo "The verifier log file [$OUTPUT_LOG] contents : " ;
          cat $OUTPUT_LOG
