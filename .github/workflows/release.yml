# GitHub Actions Workflow created for handling the release process based on the draft release prepared
# with the Build workflow. Running the publishPlugin task requires the PUBLISH_TOKEN secret provided.

name: Release
on:
  release:
    types: [released]

jobs:

  # Prepare and publish the plugin to the Marketplace repository
  release:
    name: Publish Plugin
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java 1.8 environment for the next steps
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Fetch Sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build Plugin
        run: ./gradlew buildPlugin

      - name: Publish Plugin to Jetbrains Marketplace
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: ./gradlew publishPlugin

      - name: Determine Artifact Name
        run: echo "ARTIFACT_NAME=djinni-intellij-plugin-$(./gradlew printVersion --console=plain -q).zip" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ $(curl -sL https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.upload_url') }}
          asset_path: ./plugin-artifact/${{ env.ARTIFACT_NAME }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/zip
